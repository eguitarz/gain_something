!!!
%html
	%head
		%title 
			= yield(:title).empty? ? "Gain Something" : yield(:title)
		%meta{name:'twitter:title', property:'og:title', itemprop: 'title name', content: yield(:title).empty? ? "Gain Something" : yield(:title)}
		%meta{name:'twitter:description', property:'og:description', itemprop: 'description', content: yield(:description).empty? ? "Gain Something - A simple website collector" : yield(:description)}
		%link{href:'http://fonts.googleapis.com/css?family=Open+Sans', rel:'stylesheet', type:'text/css'}
		%link{href:'http://fonts.googleapis.com/css?family=Slabo+13px', rel:'stylesheet', type:'text/css'}
		= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track' => true
		= javascript_include_tag 'application', 'data-turbolinks-track' => true
		= csrf_meta_tags
		= analytics_init if Rails.env.production? or Rails.env.development?
- body_class = params[:action]
- body_class += ' present' if params[:p] == '1'
- lightbox_class = "_is_#{@current_resource.mime}" if @current_resource.present?
%body{id: "#{params[:controller]}", class: body_class}
	#confirmDialog
		#confirmDialog_text
		#confirmDialog_buttons
			#confirmDialog_buttons_cancel
				.btn-small.btn-no
					Cancel
			#confirmDialog_buttons_confirm
				.btn-small.btn-yes
					Delete
	- if @current_resource.present?
		#lightbox{class: lightbox_class}
			%input{type: 'hidden', value: @collection.resources.count, id: 'lightbox_resource_count'}
			#lightbox_player_wrapper
				#lightbox_previous_button
					.btn-round.btn-prev
						= icon('angle-left')
				#lightbox_next_button
					.btn-round.btn-next
						= icon('angle-right')
				#lightbox_player
					%input{id:'preview-desc-value', type:'hidden', value: get_description(@current_resource) }
					%h1#lightbox_title
						- print_title(@current_resource, true)
					#lightbox_display
						- print_description_column(@current_resource)
						- print_embedded_or_thumbnail(@current_resource)
				#lightbox_close_button
					.btn-round.btn-close
						= icon('close')
	- if flash.present?
		#notifier
			= flash[:error]
			= flash[:notice]
	#menu.sideMenu
		%ul.scrollable
			-# %li.sideMenu_item
			-# 	= link_to 'Home', root_path, class: 'sideMenu_link'
			- if current_user
				%li.sideMenu_item
					= link_to 'My collections', user_path(current_user.username), class: 'sideMenu_link'
				%li.sideMenu_item
					= link_to 'Log Out', destroy_user_session_path, method: 'DELETE', class: 'sideMenu_link'
			- else
				%li.sideMenu_item
					= link_to 'Log In', new_user_session_path, class: 'sideMenu_link'
	#overlay
	#main
		.btn-menu
		= yield
		#editor
			%form#text-form
				#mdeditor
				.resource-cancel-btn
					Cancel
			%form#link-form
				%label
					Link Mode
				.resource-cancel-btn
					Cancel
			%form#video-form
				%label
					Video Mode
				.resource-cancel-btn
					Cancel
			%form#file-form
				%label
					File Mode
				.resource-cancel-btn
					Cancel