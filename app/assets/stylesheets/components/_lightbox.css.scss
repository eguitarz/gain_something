@import 'base/utils/__utils';

// define component placeholders for component contents (no selector here)
@include importOnce('lightbox') {
  %lightbox {
    position: fixed;
    top: 0;
    left: -9999em;
    width: 100%;
    height: 100%;
    z-index: 9999;
  }

  %lightbox_player_wrapper {
    position: absolute;
    left: 0;
    right: 0;
    top: 5%;
    height: 100%;
    width: 80%;
    min-width: 720px;
    margin-left: auto;
    margin-right: auto;
  }

  %lightbox_player {
    /* video height / video width */
    // padding-bottom: 56.2%;
    /* the above value * 0.5 */
    // margin-top: -28.1%;
    overflow-y: scroll;
    overflow-x: hidden;
    max-height: 90%;
    // min-height: 100%;
  }

  %lightbox_player_iframe {
    display: block;
    max-width: 90%;
    margin: auto;
  }

  %lightbox_player_image {
    max-width: 90%;
  }

  %lightbox_title {
    font-size: 1.4em;
    padding: 20px 40px 0 40px;
    overflow: hidden;
  }

  %lightbox_display {
    padding: 0 40px 120px 40px;
  }

  %lightbox_display_image_container {
    margin: auto;
    text-align: center;
  }

  %lightbox_display_description {
    padding-bottom: 40px;
  }

  %lightbox_previous_button {
    position: absolute;
    top: 50%;
    left: -32px;
    margin-top: -40px;
  }

  %lightbox_next_button {
    position: absolute;
    top: 50%;
    right: -32px;
    margin-top: -40px;
  }

  %lightbox_close_button {
    position: absolute;
    top: 0;
    right: -32px;
    font-size: 0.6em;
  }
}

@mixin lightbox($selector, $defaultSkin: true) {

  #{$selector} {
    @extend %lightbox;

    #{$selector}_title {
      @extend %lightbox_title;
    }

    #{$selector}_player_wrapper {
      @extend %lightbox_player_wrapper;

      #{$selector}_previous_button {
        @extend %lightbox_previous_button;
      }

      #{$selector}_next_button {
        @extend %lightbox_next_button; 
      }

      #{$selector}_close_button {
        @extend %lightbox_close_button; 
      }

      #{$selector}_player {
        @extend %lightbox_player;

        iframe { @extend %lightbox_player_iframe; }
        img { @extend %lightbox_player_image; }
      }
    }

    #{$selector}_display {
      @extend %lightbox_display;

      .display_image_container {
        @extend %lightbox_display_image_container;
      }

      #{$selector}_display_description {
        @extend %lightbox_display_description;
      }
    }

  }

  @if $defaultSkin != false {
    @include lightbox-skin-default($selector);
  }
}

// define component placeholders for component skin (no selector here)
@include importOnce('lightbox-skin-default') {
  %lightbox-skin-default {
    background-color: rgba(0,0,0,0.52);
  }

  %lightbox-skin-default__is_video_display {
    background-color: $black;
  }

  %lightbox-skin-default__is_photo_display {
    background-color: $black;
  }

  %lightbox-skin-default__is_photo_title {
    display: none;
  }

  %lightbox-skin-default__is_video_title {
    display: none;
  }

  %lightbox-skin-default__is_error_player {
    background-color: $white;
  }

  %lightbox-skin-default__is_text_player {
    background-color: $white;
  }

  %lightbox-skin-default__is_link_player {
    background-color: $white;
  }
}

// provide a default skin for the component
// only visual changes that don't affect the component layout should be in here
@mixin lightbox-skin-default($selector) {

  #{$selector} {
    @extend %lightbox-skin-default;

    &._is_photo {
      #{$selector}_display {
        @extend %lightbox-skin-default__is_photo_display;
      }

      #{$selector}_title {
        @extend %lightbox-skin-default__is_photo_title;
      }
    }

    &._is_video {
      #{$selector}_display {
        @extend %lightbox-skin-default__is_video_display;
      }

      #{$selector}_title {
        @extend %lightbox-skin-default__is_video_title;
      }
    }

    &._is_text {
      #{$selector}_player {
        @extend %lightbox-skin-default__is_text_player;
      }
    }

    &._is_link {
      #{$selector}_player {
        @extend %lightbox-skin-default__is_link_player;
      }
    }

    &._is_error {
      #{$selector}_player {
        @extend %lightbox-skin-default__is_error_player;
      }
    }
  }
}